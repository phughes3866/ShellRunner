// ShellRunner Example.sublime-keymap file.
// This inactive file is intended to be used as a template from
// `- which users can build their own active 'Default ${platform}.sublime-keymap'
//  - file (which will presently be in the right hand panel if you're
//  - using the standard key bindings edit mode of ShellRunner).
//  - Copy entries from here to there, and save to make active.

// Note: The commands below are rather geared to Linux and
// `- the Bourne Again Shell (bash).
// Note: If you copy and implement any of the examples, 
// `- make sure to change the key binding to suit your system.

[
	{
		"keys":	["ctrl+alt+t"],
		"command":	"window_open_terminal_here",
	},


	{
		// spawn a gnome-terminal to open .py files in the nano editor
		"keys":	["ctrl+alt+1"],
		"command":	"window_shellrunner_spawn_command",
		"args":	{	"shellCommand": "gnome-terminal -- /usr/bin/bash -c '/usr/bin/nano ${file}'",
				 	"targetExtensions": [".py"], 
				}
	},
	{
		// spawn a photo viewer / editor to open pic files
		"keys":	["ctrl+alt+2"],
		"command":	"window_shellrunner_spawn_command",
		"args":	{	"shellCommand": "geeqie '${file}'",
				 	"targetExtensions": [".jpg", ".png", ".jpeg"],
				}
	},

	{
		// Handle single and double quotes in Env and substitution vars
		// Delay the expansion of shell environment variables until shell execution time
		"keys":	["ctrl+alt+3"],
		"command":	"window_shellrunner_text_command",
		"args":	{	
					"shellCommand": [ "/usr/bin/bash -c 'echo \"Subst VarA: ${Sstra}\"; ",
					                  "echo \"Subst VarB: ${Sstrb}\"; ",
					                  "printf \"Env VarA (as subst): ${Estra}\n\"; ",
					                  "printf \"Env VarB (as subst): ${Estrb}\n\"; ",
					                  "echo \"Env VarA (shell expanded): \\${Estra}\"; ",
					                  "echo \"Env VarB (shell expanded): \\${Estrb}\"; ",
					                  "'",
					                ],
					"outputTo": ["msgBox", "clip"],
					"extraCmdSubstVars":	{ 	"Sstra"	:	"This line's got single quotes. It's working fine.",
												"Sstrb" :   "This line has \\\"double\\\" quotes. They work \\\"fine\\\" too.",
											},
					"extraCmdShellEnvVars":	{ 	"Estra"	:	"BEST_USE_RESTRICTED_CHARSET_FOR_ENV_VARS",
												"Estrb"	:	"It's unclear how the mind's eye works."
											},
				}
	},

	{
		// Handle special characters in strings e.g. quotes, backslashes, can cause problems with shell syntax
		// `- with the ${selText} substitution variable you can ensure these characters don't cause problems
		//  - by setting "selAsLiteralStr" to true - as follows
		"keys":	["ctrl+alt+4"],
		"command":	"window_shellrunner_text_command",
		"args":	{	
					"shellCommand": ["/usr/bin/bash -c '[ -z ${selText} ] && printf -- \"%s\" ",
									"\"No selection to print. Select one or more blocks of text and run again.\n\" ",
									"|| printf -- \"%s\" ${selText};",
									"'"],
					"outputTo": ["msgBox", "clip"],
					"selAsLiteralStr": true,
					"multiSelSeparator": "--joiner--",
				}
	},
]
